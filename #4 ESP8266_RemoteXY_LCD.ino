/*
   -- New project --
   
   To compile this code using RemoteXY library 3.1.13 or later version 
   download by link http://remotexy.com/en/library/
   To connect using RemoteXY mobile app by link http://remotexy.com/en/download/                   
     - for ANDROID 4.15.01 or later version;
     - for iOS 1.12.1 or later version;
    
   To interact with the GUI, please refer to the manual: 
   https://remotexy.com/ru/help/code/interaction/

   This source code was automatically generated by the RemoteXY editor and 
   is an example for the RemoteXY library. 
   Licensed under the MIT License. See the LICENSE file in the RemoteXY library
   root (https://github.com/RemoteXY/RemoteXY-Arduino-library) for full license 
   details.    
*/

//////////////////////////////////////////////
//        RemoteXY include library          //
//////////////////////////////////////////////

// you can enable debug logging to Serial at 115200
//#define REMOTEXY__DEBUGLOG    

// RemoteXY select connection mode and include library 
#define REMOTEXY_MODE__WIFI_POINT

#include <ESP8266WiFi.h>

// RemoteXY connection settings 
#define REMOTEXY_WIFI_SSID "RemoteXY"
#define REMOTEXY_WIFI_PASSWORD ""
#define REMOTEXY_SERVER_PORT 6377


#include <RemoteXY.h>

// RemoteXY GUI configuration  
#pragma pack(push, 1)  
uint8_t RemoteXY_CONF[] =   // 42 bytes
  { 255,3,0,0,0,35,0,19,0,0,0,82,69,76,65,89,0,31,1,106,
  200,1,1,2,0,7,17,33,74,14,84,64,2,26,4,41,68,20,91,0,
  132,26 };
  
// this structure defines all the variables and events of your control interface 
struct {

    // input variables
  int16_t edit_01; // -32768 .. +32767
  int8_t slider_01; // from 0 to 100

    // other variable
  uint8_t connect_flag;  // =1 if wire connected, else =0

} RemoteXY;   
#pragma pack(pop)
 
/////////////////////////////////////////////
//           END RemoteXY include          //
/////////////////////////////////////////////

#include <LiquidCrystal_I2C.h>

LiquidCrystal_I2C lcd(0x27,16,2);

void setup() 
{
  RemoteXY_Init (); 
  
  lcd.init();                               // initialize the lcd 
  lcd.clear();
  lcd.backlight();                          //turn LCD backlight
  lcd.setCursor(0,0);                       //display "TEXT:" at column 0, row 0 of the LCD
  lcd.print("EDIT: ");  
  lcd.setCursor(0,1);                       //display "SLIDER:" at column 0, row 1 of the LCD
  lcd.print("SLIDER: ");  
}

void loop() 
{ 
  RemoteXY_Handler ();
  
  lcd.setCursor(8,0);
  lcd.print("     ");  
  lcd.setCursor(8,0);                       //print print the POT data on the LCD
  lcd.print(RemoteXY.edit_01);
  lcd.print();

  lcd.setCursor(8,1);                       //print print the POT data on the LCD
  lcd.print("     ");  
  lcd.setCursor(8,1);
  lcd.print(RemoteXY.slider_01);

  RemoteXY_delay (500);  // wait for 0.5 second
}